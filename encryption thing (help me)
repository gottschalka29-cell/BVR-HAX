
# # # alphabet = "abcdefghijklmnopqrstuvwxyz"

# # # def encrypt(message, shift):
# # #     encrypted = []
# # #     for letter in message:
# # #         if letter in alphabet:
# # #             number = alphabet.index(letter)
# # #             new_letter = alphabet[(number+shift) % 26]
# # #             print(new_letter)
# # #             encrypted.append(new_letter)
# # #         else:
# # #             print(letter)
# # #     return("".join(encrypted))

# # # def decrypt(message, shift):
# # #     return encrypt(message, -shift)
# # # message = "werm people"
# # # print(message)
# # # encrypted = encrypt(message, 5)
# # # print(encrypted)
# # # decrypted = decrypt(encrypted, 5)
# # # print(decrypted) 

# # # lambda function
# # # numbers = [(2, 5), (4, 3), (2, 7), (3, 9), (4,2)]

# # # answer = sorted(numbers, key=lambda x: x[1])

# # # print(answer)

# # #list refresher
# # #nums = [0, 1, 2]
# # # nums.extend[3, 4, 5])
# # # print(nums)

# # #print(nums.pop())
# # #print(nums)

# # nums =[1, [2, [3, 4], 5], 6]

# # #how you flatten a list????? 
# # for number in nums:
# #     if nums(isinstance(nums, list)) == True: 
    
# def fibonacci(number):
#     last = 0
#     current = 1 
#     added = 0
#     for i in range(number):
#        added = last + current 
#        last = current 
#        current = added 
#     return added 
        
# print(fibonacci(6))

# it works sob 
def use_number(num):
    return num *2 - 4

def get_number(func, list):
    answer = 0
    new_list = []
    for i in list:
        answer = func(i)
        new_list.append(answer)
    return new_list

print(get_number(use_number, [5, 8, 2, 4, 6]))